// - Crie um c√≥digo que gere um n√∫mero aleat√≥rio entre 1 e 20 e, em seguida, solicita um n√∫mero do usu√°rio (entre 1 e 20). Seu programa deve continuar solicitando o n√∫mero at√© que o usu√°rio acerte o n√∫mero sorteado.

// Considere, tamb√©m, os requisitos funcionais abaixo:

// 1. O usu√°rio deve conseguir visualizar seu n√∫mero de tentativas.
// 2. O usu√°rio deve conseguir visualizar os n√∫meros que ele j√° tentou.
// 3. N√£o √© permitido que o usu√°rio entre com um n√∫mero que n√£o esteja entre 1 e 20, ou um n√∫mero que ele j√° inseriu antes.
// 4. Ao acertar, o usu√°rio deve ter a op√ß√£o de jogar novamente.
// 5. O recorde do usu√°rio dever√° ser salvo e atualizado.

const readlineSync = require("readline-sync");

function generateRandomNumber(min?: number, max?: number) {
  const minValue = min ?? 1;
  const maxValue = max ?? 20;

  return Math.round(Math.random() * (maxValue - minValue)) + minValue;
}

function validateInput(choice: number, tentativas: number[]) {
  while (
    isNaN(choice) ||
    choice < 1 ||
    choice > 20 ||
    tentativas.includes(choice)
  ) {
    choice = Number(
      readlineSync.question(
        "\nOp√ß√£o inv√°lida! Informe outro n√∫mero entre 1 e 20: "
      )
    );
  }
}

while (true) {
  let choice: number;
  let numeroDeTentativas = 0;
  const tentativas: number[] = [];

  const randomNumber = generateRandomNumber();

  choice = Number(readlineSync.question("\nInforme um n√∫mero entre 1 e 20: "));
  validateInput(choice, tentativas);

  while (choice !== randomNumber) {
    console.clear();
    console.log("\nEsse n√£o √© o n√∫mero correto! ‚ùå\n");
    numeroDeTentativas++;
    tentativas.push(choice);

    console.log("N√∫meros que voc√™ j√° tentou:", ...tentativas, "\n");
    choice = Number(readlineSync.question("Informe um n√∫mero entre 1 e 20: "));
    validateInput(choice, tentativas);
  }

  console.clear();
  console.log(
    `\n\nVoc√™ acertou o n√∫mero em ${++numeroDeTentativas} tentativas! O n√∫mero era ${randomNumber}! üéâ üéâ\n\n`
  );

  const continuePlayingResponse = readlineSync.keyInSelect(
    ["Continuar", "Encerrar o jogo"],
    "Deseja continuar?",
    { cancel: false }
  );

  if (continuePlayingResponse === 1) break;
  console.clear();
}
